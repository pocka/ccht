(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{63:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),c=(n(0),n(84)),o={title:"Node API",slug:"/api"},i={unversionedId:"node_api",id:"node_api",isDocsHomePage:!1,title:"Node API",description:"[types-ts]//github.com/pocka/ccht/blob/master/src/types.ts",source:"@site/docs/node_api.md",slug:"/api",permalink:"/ccht/api",editUrl:"https://github.com/pocka/ccht/edit/master/website/docs/node_api.md",version:"current",sidebar:"api",previous:{title:"CLI",permalink:"/ccht/cli"}},s=[{value:"Basic Usage",id:"basic-usage",children:[]},{value:"Using your own crawler",id:"using-your-own-crawler",children:[]}],l={toc:s};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"With ccht's Node.js API, you have more control over crawling and reporting.\nIn fact, ",Object(c.b)("inlineCode",{parentName:"p"},"ccht")," CLI is just a wrapper for the Node.js API."),Object(c.b)("div",{className:"admonition admonition-info alert alert--info"},Object(c.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"TL;DR")),Object(c.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"See ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/pocka/ccht/blob/master/src/types.ts"}),"our type definition file"),"."))),Object(c.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(c.b)("p",null,"Run ",Object(c.b)("inlineCode",{parentName:"p"},"checkAndReport")," function with a crawler and JSON Reporter.\nThis will cover the most of usecases."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="Get a result in JSON"',title:'"Get',a:!0,result:!0,in:!0,'JSON"':!0}),'import { checkAndReport, NodeHttpCrawler, JsonReporter } from "ccht";\n\nconst results = await checkAndReport(\n  new NodeHttpCrawler({\n    concurrency: 1,\n    timeout: 5000,\n    useragent: "ccht/node",\n  }),\n  new JsonReporter({}),\n  "https://example.com",\n  {\n    // [Required]\n    // You need set includeUrls manually\n    includeUrls: ["https://example.com"],\n\n    // [Required]\n    excludeUrls: [\n      // You can use RegExp and Function for match patterns!\n      // (same for includeUrls)\n      /\\.htm$/,\n      (url) => url.includes("auth"),\n    ],\n\n    // [Required]\n    expectedStatus: /^[123]\\d\\d$/,\n\n    reportTypes: ["error", "unexpected_status"],\n\n    // [Required]\n    reportSeverities: ["danger", "warning", "info", "debug"],\n\n    // [Required]\n    exitErrorSeverities: ["danger"],\n  }\n);\n\n// Since reporter always emits strings, you need to deserialize the result.\nconsole.log(JSON.parse(results));\n')),Object(c.b)("p",null,"For more about the checker options, see ",Object(c.b)("inlineCode",{parentName:"p"},"CheckerOptions")," in ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/pocka/ccht/blob/master/src/types.ts"}),Object(c.b)("inlineCode",{parentName:"a"},"types.ts")),"."),Object(c.b)("h2",{id:"using-your-own-crawler"},"Using your own crawler"),Object(c.b)("p",null,"Crawler is a simple JavaScript object, implements ",Object(c.b)("inlineCode",{parentName:"p"},"visit")," method and ",Object(c.b)("inlineCode",{parentName:"p"},"destroy")," method."),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"visit")," async method takes an URL, checks for it somehow, and returns URLs to be crawled later.\nTo crawl effeciently, you should set and check the second parameter, which is a Map of ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/pocka/ccht/blob/master/src/types.ts#L1"}),Object(c.b)("inlineCode",{parentName:"a"},"VisitedLink")," object"),". A caller checks duplication too, but you need check in the ",Object(c.b)("inlineCode",{parentName:"p"},"visit")," method especially if your crawler support concurrency."),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"destroy")," async method will be called when there is no more resources to crawl.\nFree resources in the method (or don't, but your crawler must have the method)."),Object(c.b)("p",null,"See more at ",Object(c.b)("inlineCode",{parentName:"p"},"interface Crawler")," in ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/pocka/ccht/blob/master/src/types.ts"}),Object(c.b)("inlineCode",{parentName:"a"},"types.ts")),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="Ways to implement crawlers"',title:'"Ways',to:!0,implement:!0,'crawlers"':!0}),'import { checkAndReport } from "ccht";\nimport fetch from "node-fetch";\n\n// Simple object with required methods\nconst objectCrawler = {\n  async visit(url, visited) {\n    /*...*/\n  },\n  async destroy() {\n    /*...*/\n  },\n};\n\nawait checkAndReport(objectCrawler /*...*/);\n\n// A function that returns a crawle\nconst functionCrawler = (...params) => {\n  return {\n    async visit(url, visited) {\n      /*...*/\n    },\n    async destroy() {\n      /*...*/\n    },\n  };\n};\n\nawait checkAndReport(functionCrawler(foo) /*...*/);\n\n// Class style\nclass ClassCrawler {\n  async visit(url, visited) {\n    /*...*/\n  }\n\n  async destroy() {\n    /*...*/\n  }\n}\n\nawait checkAndReport(new ClassCrawler() /*...*/);\n\n// If you\'re using TypeScript, you should use `Crawler` interface type.\nclass ClassCrawler implements Crawler {\n  /*...*/\n}\nconst objectCrawler: Crawler = {\n  /*...*/\n};\nconst functionCrawler = (): Crawler => {\n  /*...*/\n};\n')))}p.isMDXComponent=!0},84:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,m=u["".concat(o,".").concat(d)]||u[d]||b[d]||c;return n?a.a.createElement(m,i(i({ref:t},l),{},{components:n})):a.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<c;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);